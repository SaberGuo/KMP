using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace KMP.Interface.Tools
{
    public class Interpolation
    {

        Dictionary<int, Dictionary<int, double>> _originMap = new Dictionary<int, Dictionary<int, double>>();

        Dictionary<double, double> _originMap1d = new Dictionary<double, double>();
        public Interpolation()
        {
            Dictionary<int, double> tmp4 = new Dictionary<int, double> { {220,0.0959 },
                {260, 0.0884 }, { 300, 0.0839}, { 400, 0.0783}, { 500, 0.0759}, { 700, 0.0739},
                { 1000, 0.0729}, { 3000, 0.0720}, { 5000, 0.0720} };
            Dictionary<int, double> tmp5 = new Dictionary<int, double> { {140,0.0929 },
                {160, 0.0802 }, { 200, 0.0658}, { 240, 0.0586}, { 300, 0.0532}, { 400, 0.0494},
                { 500, 0.0478}, { 700, 0.0465}, { 1000, 0.0459}, { 3000, 0.0454}, { 5000, 0.0453} };
            Dictionary<int, double> tmp6 = new Dictionary<int, double> { {120,0.0837 },
                {160, 0.0584 }, { 200, 0.0469}, { 240, 0.0411}, { 300, .0369}, { 400, .0341},
                { 500, .0329}, { 700, .0320}, { 1000, .0316}, { 3000, .0312}, { 5000, .0312} };
            Dictionary<int, double> tmp8 = new Dictionary<int, double> { {100,0.066 },
                {160, 0.0372 }, { 200, 0.0285}, { 240, .0242}, { 300, .0212}, { 400, .0192},
                { 500, .0184}, { 700, .0179}, { 1000, .0176}, { 2000, .0174}, { 5000, .0174} };
            Dictionary<int, double> tmp10 = new Dictionary<int, double> { {56,0.0964 },
                {70, 0.072 }, { 100, 0.0463}, { 120, 0.0371}, { 200, 0.0201}, { 240, 0.0165},
                { 300, 0.0139}, { 400, .0124}, { 500, .0118}, { 700, .0114}, { 1000, .0112},
                { 1600,.0111},{ 5000, .0111} };
            Dictionary<int, double> tmp15 = new Dictionary<int, double> { {34,0.0968 },
                {40, .077 }, { 60, .0453}, { 100, .0244}, { 120, .0197}, { 200, .0109},
                { 240, 0.0089}, { 300, .00691}, { 400, .00573}, { 500, .00534}, { 600, .00516},
                { 1000, .00497},{ 4000, .0049}, { 5000, .0049} };
            Dictionary<int, double> tmp20 = new Dictionary<int, double> { {24,0.0982 },
                {40, .0477 }, { 60, .0286}, { 80, 2.03/100}, { 100, 1.56/100}, { 120, 1.27/100},
                { 200, 0.0071}, { 300, 4.46/1000}, {340,3.88/1000 }, { 400, 3.42/1000}, { 500, 3.08/1000}, { 700, 2.87/1000},
                { 1000, 2.80/1000},{ 4000, 2.75/1000}, { 5000, 2.75/1000} };
            Dictionary<int, double> tmp25 = new Dictionary<int, double> { {20,0.0877 },
                {30, 4.84/100 }, { 50, 2.50/100}, { 80, 1.43/100}, { 100, 1.11/100}, { 120, 0.00902},
                { 200, 5.08/1000}, { 300, 3.23/1000}, {340,2.78/1000 }, { 400, 2.35/1000}, { 440, 2.19/1000}, { 500, 2.04/1000},
                { 600, 1.91/1000},{ 700, 1.86/1000},{ 1000, 1.80/1000},{ 3000, 1.76/1000}, { 5000, 1.76/1000} };

            Dictionary<int, double> tmp30 = new Dictionary<int, double> { {16,0.0904 },
                {20, 6.35/100 }, { 30, 3.57/100}, { 40, 2.46/100},{ 60, 1.5/100},{ 80, 1.08/100}, { 100, 0.00838}, { 120, 6.83},
                { 200, 3.88/1000}, { 300, 2.46/1000}, {400,1.77/1000 }, { 440, 1.61/1000}, { 500, 1.47/1000},
                { 600, 1.36/1000},{ 700, 1.3/1000},{ 1000, 1.25/1000},{ 3000, 1.22/1000}, { 5000, 1.22/1000} };
            Dictionary<int, double> tmp40 = new Dictionary<int, double> { {12,0.0864 },
                {20, 3.85/100 }, { 30, 2.22/100}, { 40, 1.55/100},{ 60, 0.00958},{ 80, 6.91/1000}, { 100, 5.39/1000}, { 120, 4.41/1000},
                { 200, 2.52/1000},  {400,1.17/1000 },  { 500, 0.000912},
                { 600, 8.04/10000},{ 700, 7.56/10000},{ 800, 7.31/10000},{ 1000, 7.08/10000},{ 1600, 6.92/10000},{ 4000, 6.88/10000}, { 5000, 6.88/10000} };

            Dictionary<int, double> tmp50 = new Dictionary<int, double> { {9,0.093 },
                {10, 7.82/100 }, {20, 2.63/100 },{ 30, 1.54/100}, { 40, 1.08/100},{ 60, 0.00677},{ 80, 4.90/1000}, { 100, 3.84/1000}, { 200, 1.71/1000},
                 { 400, 0.000842},{500, 6.52/10000 },
                { 600, 5.48/10000},{ 700, 5.02/10000},{ 800, 4.78/10000},{ 1000, 4.58/10000},{ 1200, 4.49/10000},{ 1600, 4.44/10000},{ 4000, 4.4/10000}, { 5000, 4.4/10000} };

            Dictionary<int, double> tmp60 = new Dictionary<int, double> { {7,0.0954 },
                {10, 5.56/100 },{14, 3.23/100 }, { 20, 1.93/100}, { 40, 0.00812},{ 60, 5.1/1000},{ 80, 3.71/1000}, { 100, 2.91/1000},
                { 200, 1.38/1000},  { 300, 0.000886},{400,6.45/10000 },  
                { 600, 4.09/10000},{ 700, 3.64/10000},{ 800, 3.41/10000},{ 1000, 3.22/10000},{ 1400, 3.1/10000},{ 4000, 3.06/10000}, { 5000, 3.06/10000} };

            Dictionary<int, double> tmp80 = new Dictionary<int, double> { {5,0.099 },
                {7, 6.08/100 },{9, 3.91/100 },{10, 3.28/100 },{14, 1.96/100 },{20, 1.2/100 },{24, 0.0095 }, { 40, 5.16/1000},{ 60, 3.28/1000},{ 80, 2.39/1000}, { 100, 1.88/1000},
                { 200, 0.000895},{400,4.24/10000 },
                { 660, 2.41/10000},{ 800, 2.05/10000},{ 1000, 1.86/10000},{ 1400, 1.76/10000},{ 3000, 1.72/10000}, { 5000, 1.72/10000} };

            Dictionary<int, double> tmp100 = new Dictionary<int, double> { {5,0.0741 },
                {7, 3.98/100 },{10, 2.2/100 },{14, 1.33/100 },{20, 0.00831 }, { 40, 3.64/1000},{ 50, 2.83/1000},{ 80, 1.7/1000}, { 100, 1.34/1000},
                {400,3.05/1000 },  { 200, 0.000641},
                { 600, 1.95/10000},{ 800, 1.42/10000},{ 1000, 1.24/10000},{ 1400, 1.14/10000},{ 2500, 1.1/10000}, { 5000, 1.1/10000} };
            //
            Dictionary<int, double> tmp125 = new Dictionary<int, double> { {5,0.048 },
                {6, 3.44/100 }, { 8, 2.10/100}, { 10, 1.48/100},{ 14, 0.00917},{ 20, 5.78/1000}, { 40, 2.57/1000}, { 60, 1.65/1000},{ 80, 1.21/1000},
                { 100, 0.000955},
                { 200, 4.59/10000},  {400,2.2/10000 },
                { 600, 1.41/10000},{ 900, 0.0000904},{ 1000, 8.37/100000},{ 1200, 7.7/100000},{ 1400, 7.4/100000},{ 2000, 7.13/100000},{ 4000, 7.04/100000}, { 5000, 7.04/100000} };

            Dictionary<int, double> tmp150 = new Dictionary<int, double> { {5,0.0338 },
                {6, 2.44/100 }, { 8, 1.51/100}, { 10, 1.08/100},{ 12, 0.00833},{ 16, 5.69/1000}, { 20, 4.31/1000}, { 40, 1.94/1000},{ 60, 1.25/1000},{ 100, 0.000726},
                { 200, 3.49/10000},  {400,1.68/10000 },
                { 600, 1.08/10000},{ 800, 0.0000787},{ 1000, 6.19/100000},{ 1200, 5.53/100000},{ 1600, 5.1/100000},{ 2000, 4.98/100000},{ 4000, 4.89/100000}, { 5000, 4.89/100000} };
            //
            Dictionary<int, double> tmp200 = new Dictionary<int, double> { {5,0.0196 },{6,1.43/100 },{8,0.00909 },
                {10, 6.59/1000 }, { 14, 4.21/1000},{ 20, 2.72/1000}, { 30, 1.71/1000},{ 50, 0.000976},{ 80, 5.92/10000}, { 100, 4.69/10000}, { 200, 2.27/10000},
                {400,1.10/10000 },  { 600, 0.0000711},
                { 800, 5.2/100000},{ 1000, 4.03/100000},{ 1200, 3.38/100000},{ 1400, 3.09/100000},{ 1600, 2.95/100000},{ 2000, 2.83/100000},{ 4000, 2.75/100000}, { 5000, 2.75/100000} };

            Dictionary<int, double> tmp250 = new Dictionary<int, double> { {5,0.0129 },{6,0.00955 },{8,6.17 },
                {10, 4.52/1000 },{14, 2.93/1000 }, { 20, 1.91/1000}, { 40, 0.000881},{ 60,5.72/10000},{ 80, 4.22/10000}, { 100, 3.35/10000},
                { 200, 1.63/10000},  {400,0.0000789 },
                { 600, 5.13/100000},{ 800, 3.77/100000},{ 1000, 2.93/100000},{ 1200, 2.38/100000},{ 1400, 2.1/100000},{ 1600, 1.96/100000},{ 2000, 1.84/100000},{ 4000, 1.76/100000}, { 5000, 1.76/100000} };

            Dictionary<int, double> tmp300 = new Dictionary<int, double> { {5,0.00923 },{6,6.9/1000 },{8,4.52/1000 },
                {10, 3.34/1000 },{12, 2.64/1000 }, { 20, 1.43/1000}, { 40, 0.000666},{ 60,4.33/10000},{ 80, 3.21/10000}, { 100, 2.54/10000},
                { 200, 1.24/10000},  {400,0.0000602 },
                { 600, 3.93/100000},{ 800, 2.87/100000},{ 1000, 2.25/100000},{ 1400, 1.56/100000},{ 1600, 1.42/100000},{ 2000, 1.30/100000},{ 4000, 1.23/100000}, { 5000, 1.22/100000} };

            Dictionary<int, double> tmp400 = new Dictionary<int, double> { {5,0.00549 },{6,4.17/1000 },{8,2.78/1000 },
                {10, 2.08/1000 },{12, 1.66/1000 },{16, 1.18/1000 }, { 20, 0.000914}, { 40, 4.29/10000},{ 60,2.8/10000},{ 80, 2.07/10000}, { 100, 1.65/10000},
                { 400, 3.93/10000},  {200,0.0000808 },
                { 600, 2.57/100000},{ 800, 1.89/100000},{ 1000, 1.48/100000},{ 1400, 1.02/100000},{ 1600, 0.00000882}};

            //
            Dictionary<int, double> tmp500 = new Dictionary<int, double> { {5,0.0037 },
                {6, 2.84/1000 }, { 8, 1.92/1000}, { 10, 1.45/1000},{ 12, 1.16/1000},{ 16, 0.00083}, { 20, 6.45/10000}, { 40, 3.05/10000},
                { 60, 1.99/10000},  {80,1.48/10000 },  { 100, 1.18/10000},
                { 200,0.0000579},{ 400, 2.82/100000},{ 600, 1.85/100000},{ 800, 1.37/100000},{ 1000, 1.07/100000},{ 1200, 0.0000088} };
            Dictionary<int, double> tmp600 = new Dictionary<int, double> { {5,0.0027 },
                {6, 2.08/1000 }, { 8, 1.42/1000}, { 10, 1.08/1000},{ 12, 0.000868},{ 16, 6.24/10000}, { 20, 4.86/10000}, { 40, 2.31/10000},
                { 60, 1.51/10000},  {80,1.12/10000 },  { 100, 0.0000894},
                { 200, 4.39/100000},{ 400, 2.16/100000},{ 600, 1.41/100000},{ 800, 1.04/100000},{ 840, 0.00000988} };
            Dictionary<int, double> tmp800 = new Dictionary<int, double> { {5,0.00165 },
                {6, 1.29/1000}, { 8, 0.000892}, { 10, 6.82/10000},{ 12, 5.51/10000},{ 16, 3.98/10000}, { 20, 3.12/10000}, { 40, 1.49/10000},
                { 60, 0.000098},  {80,7.28/100000 },  { 100, 5.8/100000},
                { 200, 2.86/100000},{ 400, 1.4/100000},{ 500, 1.12/100000},{ 560, 0.00000992}};
            Dictionary<int, double> tmp1000 = new Dictionary<int, double> { {5,0.00113 },
                {6, 0.000891 }, { 7, 7.33/10000}, { 9, 5.41/10000},{ 12, 3.88/10000},{ 16, 2.82/10000}, { 20, 2.21/10000}, { 40, 1.06/10000},
                { 70, 0.0000596},  {100,4.14/100000 },  { 200, 2.04/100000},
                { 400, 1.01/100000},{ 420, 0.00000957} };
            this._originMap.Add(4, tmp4);
            this._originMap.Add(5, tmp5);
            this._originMap.Add(6, tmp6);
            this._originMap.Add(8, tmp8);
            this._originMap.Add(10, tmp10);
            this._originMap.Add(15, tmp15);
            this._originMap.Add(20, tmp20);
            this._originMap.Add(25, tmp25);
            this._originMap.Add(30, tmp30);
            this._originMap.Add(40, tmp40);
            this._originMap.Add(50, tmp50);
            this._originMap.Add(60, tmp60);
            this._originMap.Add(80, tmp80);
            this._originMap.Add(100, tmp100);
            this._originMap.Add(125, tmp125);
            this._originMap.Add(150, tmp150);
            this._originMap.Add(200, tmp200);
            this._originMap.Add(250, tmp250);
            this._originMap.Add(300, tmp300);
            this._originMap.Add(400, tmp400);
            this._originMap.Add(500, tmp500);
            this._originMap.Add(600, tmp600);
            this._originMap.Add(800, tmp800);
            this._originMap.Add(1000, tmp1000);

            _originMap1d.Add(0.00001, 1.29);
            _originMap1d.Add(0.000463, 60);
            _originMap1d.Add(0.0015, 97.3);
            _originMap1d.Add(0.002, 105);
            _originMap1d.Add(0.003, 115);
            _originMap1d.Add(0.01, 131);
            _originMap1d.Add(0.1, 147);
            
        }
        public double executed2D(double x, int y)
        {
            int[] keys = _originMap.Keys.ToArray();
            int x1 = 4, x2 = 4;
            getRange(keys, x, ref x1, ref x2);
            int[] keys_x1 = _originMap[x1].Keys.ToArray();
            int y1_1 = 200, y1_2 = 200;
            getRange(keys_x1, y, ref y1_1, ref y1_2);

            int[] keys_x2 = _originMap[x2].Keys.ToArray();
            int y2_1 = 200, y2_2 = 200;
            getRange(keys_x2, y, ref y2_1, ref y2_2);
            //idw
            double d11 = Math.Sqrt(Math.Pow(x - x1, 2) + Math.Pow(y / 100.0 - y1_1 / 100.0, 2));
            double d12 = Math.Sqrt(Math.Pow(x - x1, 2) + Math.Pow(y / 100.0 - y1_2 / 100.0, 2));
            double d21 = Math.Sqrt(Math.Pow(x - x2, 2) + Math.Pow(y / 100.0 - y2_1 / 100.0, 2));
            double d22 = Math.Sqrt(Math.Pow(x - x2, 2) + Math.Pow(y / 100.0 - y2_2 / 100.0, 2));

            double sum_d = 1 / d11 + 1 / d12 + 1 / d21 + 1 / d22;
            double res = (1 / d11) / sum_d * _originMap[x1][y1_1] + (1 / d12) / sum_d * _originMap[x1][y1_2] + (1 / d21) / sum_d * _originMap[x2][y2_1] + (1 / d22) / sum_d * _originMap[x2][y2_2];
            return res;



        }
        public double executed1d(double a)
        {
            double k1 = _originMap1d.First().Key;
            double k2 = _originMap1d.Last().Key;
            double v1 = _originMap1d.First().Value;
            double v2 = _originMap1d.Last().Value;
            foreach (var item in _originMap1d)
            {
                if (a>= item.Key)
                {
                    if (item.Key >= k1)
                    {
                        k1 = item.Key;
                        v1 = item.Value;
                    }
                    
                }
                if (a < item.Key)
                {
                    if (item.Key < k2)
                    {
                        k2 = item.Key;
                        v2 = item.Value;
                    }
                   
                }
            }
            return (a - k1) / (k2 - k1) * v2 + (k2 - a) / (k2 - k1) * v1;
        }

        private void getRange(int[] keys, double x, ref int x1, ref int x2)
        {
            x1 = keys.Min();
            x2 = keys.Max();
            for (int i = 0; i < keys.Length; i++)
            {
                if (x >= keys[i])
                {
                    if (keys[i] > x1)
                    {
                        x1 = keys[i];
                    }
                    
                }

                if (x < keys[i])
                {
                    if (keys[i] < x2)
                    {
                        x2 = keys[i];
                    }
                    
                }
            }
        }


    }
}
